services:
  # 后端API服务
  - type: web
    name: zhilog-backend
    env: python
    plan: free
    buildCommand: |
      cd server
      pip install -r requirements-render.txt
      chmod +x start-render.sh
    startCommand: |
      cd server
      ./start-render.sh
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: zhilog-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: zhilog-redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: GOOGLE_AI_API_KEY
        sync: false
      - key: SECRET_KEY
        generateValue: true
      - key: ENVIRONMENT
        value: production
      - key: CLIENT_DOMAIN
        value: https://zhilog-frontend.onrender.com
      - key: PORT
        value: 8000
    healthCheckPath: /api/health
    autoDeploy: true

  # 前端服务
  - type: web
    name: zhilog-frontend
    env: node
    plan: free
    buildCommand: |
      cd client
      npm install
      npm run build
    startCommand: |
      cd client
      npm start
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://zhilog-backend.onrender.com
      - key: NEXT_PUBLIC_CELERY_API_URL
        value: https://zhilog-celery-api.onrender.com
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
    healthCheckPath: /
    autoDeploy: true

  # Celery Worker服务
  - type: worker
    name: zhilog-celery
    env: python
    plan: free
    buildCommand: |
      cd server
      pip install -r requirements-render.txt
      chmod +x ../jobs/start-celery-render.sh
    startCommand: |
      cd jobs
      ./start-celery-render.sh
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: zhilog-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: zhilog-redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: GOOGLE_AI_API_KEY
        sync: false
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: zhilog-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: zhilog-redis
          property: connectionString
    autoDeploy: true

  # Celery API服务
  - type: web
    name: zhilog-celery-api
    env: python
    plan: free
    buildCommand: |
      cd server
      pip install -r requirements-render.txt
      chmod +x ../jobs/start-celery-api-render.sh
    startCommand: |
      cd jobs
      ./start-celery-api-render.sh
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: zhilog-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: zhilog-redis
          property: connectionString
      - key: PORT
        value: 8001
    healthCheckPath: /health
    autoDeploy: true

databases:
  - name: zhilog-db
    databaseName: zhilog
    user: zhilog_user
    plan: free

services:
  - type: redis
    name: zhilog-redis
    plan: free 