"""add user fields to other objects

Revision ID: 08ee6d365f2d
Revises: b88e2d08de6b
Create Date: 2025-04-11 21:17:32.883643+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "08ee6d365f2d"
down_revision: Union[str, None] = "b88e2d08de6b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("annotations", sa.Column("user_id", sa.UUID(), nullable=True))
    op.create_foreign_key(None, "annotations", "users", ["user_id"], ["id"])
    op.add_column("conversations", sa.Column("user_id", sa.UUID(), nullable=True))
    op.create_foreign_key(None, "conversations", "users", ["user_id"], ["id"])
    op.add_column("highlights", sa.Column("user_id", sa.UUID(), nullable=True))
    op.create_foreign_key(None, "highlights", "users", ["user_id"], ["id"])
    op.add_column("messages", sa.Column("user_id", sa.UUID(), nullable=True))
    op.create_foreign_key(None, "messages", "users", ["user_id"], ["id"])
    op.add_column("paper_notes", sa.Column("user_id", sa.UUID(), nullable=True))
    op.create_foreign_key(None, "paper_notes", "users", ["user_id"], ["id"])
    op.alter_column(
        "sessions",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "sessions",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("users", "is_active", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column("users", "is_admin", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("users", "is_admin", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column("users", "is_active", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column(
        "sessions",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "sessions",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(None, "paper_notes", type_="foreignkey")
    op.drop_column("paper_notes", "user_id")
    op.drop_constraint(None, "messages", type_="foreignkey")
    op.drop_column("messages", "user_id")
    op.drop_constraint(None, "highlights", type_="foreignkey")
    op.drop_column("highlights", "user_id")
    op.drop_constraint(None, "conversations", type_="foreignkey")
    op.drop_column("conversations", "user_id")
    op.drop_constraint(None, "annotations", type_="foreignkey")
    op.drop_column("annotations", "user_id")
    # ### end Alembic commands ###
