import React, { useEffect, useLayoutEffect, useRef, useState } from "react";
import styles from "./Dashboard.module.css";
import { useNavigate, useParams } from "react-router";
import { ZhilogChat } from "../../components/ZhilogChat/ZhilogChat";
import { Navigation } from "../../components/Navigation/Navigation";
export function Dashboard() {
  //----------------------------------------------
  // Domain
  //--------------------------------------------------
  const domain =
    process.env.NODE_ENV === "development" ? "http://localhost:4000" : "";
  //----------------------------------------------

  //----------------------------------------------
  // Var
  //--------------------------------------------------
  const navigate = useNavigate();
  const params = useParams();
  // Workspace
  const chatRef = useRef();
  const [inputValue, setInputValue] = useState("");
  const [messages, setMessages] = useState([]);
  const msgTemplates = {
    deepSearch: (
      <div className={styles.message}>
        <div className={styles.avatar}>
          <img alt="logo" src="assets/image.png" />
        </div>
        <div className={styles.messageContent}>
          <div className={styles.messageHeader}>
            <span className={styles.username}>Logi</span>
            <span className={styles.timestamp}>
              {new Date().toLocaleTimeString([], {
                hour: "2-digit",
                minute: "2-digit",
              })}
            </span>
          </div>
          <p>
            Hi, I’m Logi — your team’s AI project assistant. I help summarize
            discussions, track progress, and handle meeting and task scheduling
            for your group — just @ me!
          </p>
        </div>
      </div>
    ),
    createCanvas: (
      <div className={styles.message}>
        <div className={styles.avatar}>
          <img alt="logo" src="assets/image.png" />
        </div>
        <div className={styles.messageContent}>
          <div className={styles.messageHeader}>
            <span className={styles.username}>Logi</span>
            <span className={styles.timestamp}>
              {new Date().toLocaleTimeString([], {
                hour: "2-digit",
                minute: "2-digit",
              })}
            </span>
          </div>
          <p>@Zonglin Zuo~ Creating a new canvas</p>
        </div>
      </div>
    ),
    uploadPaper: (
      <div className={styles.message}>
        <div className={styles.avatar}>
          <img alt="logo" src="assets/image.png" />
        </div>
        <div className={styles.messageContent}>
          <div className={styles.messageHeader}>
            <span className={styles.username}>Logi</span>
            <span className={styles.timestamp}>
              {new Date().toLocaleTimeString([], {
                hour: "2-digit",
                minute: "2-digit",
              })}
            </span>
          </div>
          <p>
            @Zonglin Zuo~ uploaded a new paper written by Tianshi Li, titled
            Decentralized is not risk-...
          </p>
        </div>
      </div>
    ),
  };
  // Workspace

  //----------------------------------------------

  //----------------------------------------------
  // Func
  //--------------------------------------------------
  // Workspace
  const deepSearch = () =>
    setMessages((prev) => [...prev, msgTemplates.deepSearch]);
  const createCanvas = () =>
    setMessages((prev) => [...prev, msgTemplates.createCanvas]);
  const uploadPaper = () =>
    setMessages((prev) => [...prev, msgTemplates.uploadPaper]);

  const handleSend = () => {
    const text = inputValue.trim();
    if (!text) return;
    const userMsg = (
      <div className={styles.message}>
        <div
          className={styles.avatar}
          style={{ background: "rgba(175, 175, 175, 1)" }}
        ></div>
        <div className={styles.messageContent}>
          <div className={styles.messageHeader}>
            <span className={styles.username}>You</span>
            <span className={styles.timestamp}>
              {new Date().toLocaleTimeString([], {
                hour: "2-digit",
                minute: "2-digit",
              })}
            </span>
          </div>
          <p>{text}</p>
        </div>
      </div>
    );
    setMessages((prev) => [...prev, userMsg]);
    setInputValue(""); // 清空输入框
  };

  useEffect(() => {
    if (chatRef.current) {
      chatRef.current.scrollTop = chatRef.current.scrollHeight;
    }
  }, [messages]);
  // Workspace

  //----------------------------------------------
  return (
    <div id={styles.Dashboard}>
      <div id={styles.nav}>
        <Navigation />
      </div>
      <main>
        <div className={styles.workSpace}>
          <div className={styles.user}>
            <svg
              width="22"
              height="22"
              viewBox="0 0 22 22"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_1558_13876)">
                <rect width="22" height="22" rx="4" fill="#FFD57E" />
                <path
                  d="M10.9999 14.8194C19.2499 14.8194 20.9305 19.5555 20.9305 22.0001H10.9999H1.22217C1.22217 19.5555 2.74995 14.8194 10.9999 14.8194Z"
                  fill="white"
                />
                <circle cx="10.9998" cy="8.55556" r="4.58333" fill="white" />
              </g>
              <defs>
                <clipPath id="clip0_1558_13876">
                  <rect width="22" height="22" rx="4" fill="white" />
                </clipPath>
              </defs>
            </svg>
            <span>01</span>
          </div>
          <header className={styles.header}>
            <h1 className={styles.title}>Zuo’s Workspace</h1>
            <button className={styles.addBtn}>Add people to workspace</button>
          </header>

          <div className={styles.cards}>
            <div className={styles.card} onClick={createCanvas}>
              <div className={styles.cardIcon}>+</div>
              <div className={styles.cardFooter}>
                <svg
                  width="13"
                  height="14"
                  viewBox="0 0 13 14"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M7.33331 8.11082e-05C7.86375 -0.00469279 8.37435 0.201442 8.7528 0.57314C9.13125 0.944837 9.34654 1.45165 9.35131 1.98208C9.35609 2.51251 9.14995 3.02312 8.77826 3.40157C8.40656 3.78002 7.89975 3.99531 7.36931 4.00008L7.22398 4.43541C7.56759 4.64409 7.86583 4.91959 8.10104 5.24561C8.33625 5.57163 8.50365 5.94153 8.59332 6.33342H9.47265C9.62581 5.98248 9.89513 5.69499 10.2353 5.51927C10.5755 5.34356 10.9659 5.29034 11.3407 5.36857C11.7155 5.4468 12.052 5.65171 12.2935 5.94883C12.535 6.24596 12.6668 6.61718 12.6668 7.00008C12.6668 7.38298 12.535 7.75421 12.2935 8.05133C12.052 8.34846 11.7155 8.55336 11.3407 8.63159C10.9659 8.70982 10.5755 8.65661 10.2353 8.48089C9.89513 8.30518 9.62581 8.01768 9.47265 7.66675H8.59265C8.48199 8.15316 8.25144 8.60418 7.92198 8.97875L8.39131 9.44808C8.74776 9.30821 9.1415 9.29533 9.50632 9.41163C9.87115 9.52793 10.1848 9.76629 10.3945 10.0867C10.6043 10.407 10.6973 10.7898 10.658 11.1707C10.6187 11.5516 10.4494 11.9073 10.1786 12.1781C9.90789 12.4488 9.55216 12.6181 9.17127 12.6574C8.79039 12.6967 8.40758 12.6037 8.08722 12.394C7.76686 12.1842 7.52849 11.8706 7.4122 11.5058C7.2959 11.1409 7.30877 10.7472 7.44865 10.3907L6.82598 9.76808C6.45883 9.92181 6.06468 10.0007 5.66665 10.0001C5.20852 10.0005 4.75642 9.8956 4.34531 9.69342L3.76465 10.3907C3.98686 10.8069 4.05483 11.2881 3.95655 11.7495C3.85827 12.2109 3.60006 12.6227 3.22755 12.9122C2.85504 13.2016 2.39221 13.35 1.92085 13.3313C1.44948 13.3125 0.999925 13.1277 0.651614 12.8096C0.303304 12.4914 0.0786612 12.0604 0.0173828 11.5927C-0.0438955 11.1249 0.0621346 10.6506 0.316737 10.2534C0.57134 9.8563 0.958126 9.56194 1.40875 9.42238C1.85937 9.28282 2.34482 9.30704 2.77931 9.49075L3.30865 8.85475C2.89183 8.3265 2.66561 7.67297 2.66665 7.00008C2.66665 6.51008 2.78398 6.04808 2.99198 5.63941L2.41331 5.15675C2.07095 5.3283 1.67995 5.37672 1.30608 5.29387C0.932205 5.21102 0.598267 5.00195 0.360428 4.70182C0.122588 4.40169 -0.00464415 4.02882 0.000129602 3.64591C0.00490335 3.26299 0.141392 2.8934 0.38664 2.5993C0.631888 2.30519 0.970934 2.10451 1.34676 2.03101C1.72258 1.9575 2.11225 2.01566 2.45023 2.19569C2.78821 2.37573 3.05389 2.66666 3.20257 3.01956C3.35126 3.37246 3.37389 3.76579 3.26665 4.13341L3.84665 4.61608C4.44892 4.15455 5.20427 3.93955 5.95931 4.01475L6.10465 3.57875C5.77563 3.32283 5.5348 2.97051 5.4158 2.57103C5.29681 2.17155 5.30561 1.74487 5.44096 1.35063C5.57631 0.956392 5.83146 0.614295 6.17075 0.372154C6.51003 0.130012 6.91649 -7.25044e-05 7.33331 8.11082e-05ZM1.99998 10.6667C1.82317 10.6667 1.6536 10.737 1.52858 10.862C1.40355 10.987 1.33331 11.1566 1.33331 11.3334C1.33331 11.5102 1.40355 11.6798 1.52858 11.8048C1.6536 11.9298 1.82317 12.0001 1.99998 12.0001C2.17679 12.0001 2.34636 11.9298 2.47139 11.8048C2.59641 11.6798 2.66665 11.5102 2.66665 11.3334C2.66665 11.1566 2.59641 10.987 2.47139 10.862C2.34636 10.737 2.17679 10.6667 1.99998 10.6667ZM8.99998 10.6667C8.91158 10.6667 8.82679 10.7019 8.76428 10.7644C8.70177 10.8269 8.66665 10.9117 8.66665 11.0001C8.66665 11.0885 8.70177 11.1733 8.76428 11.2358C8.82679 11.2983 8.91158 11.3334 8.99998 11.3334C9.08839 11.3334 9.17317 11.2983 9.23568 11.2358C9.2982 11.1733 9.33331 11.0885 9.33331 11.0001C9.33331 10.9117 9.2982 10.8269 9.23568 10.7644C9.17317 10.7019 9.08839 10.6667 8.99998 10.6667ZM5.66665 5.33342C5.22462 5.33342 4.8007 5.50901 4.48814 5.82157C4.17558 6.13413 3.99998 6.55805 3.99998 7.00008C3.99998 7.44211 4.17558 7.86603 4.48814 8.17859C4.8007 8.49115 5.22462 8.66675 5.66665 8.66675C6.10868 8.66675 6.5326 8.49115 6.84516 8.17859C7.15772 7.86603 7.33331 7.44211 7.33331 7.00008C7.33331 6.55805 7.15772 6.13413 6.84516 5.82157C6.5326 5.50901 6.10868 5.33342 5.66665 5.33342ZM11 6.66675C10.9116 6.66675 10.8268 6.70187 10.7643 6.76438C10.7018 6.82689 10.6666 6.91168 10.6666 7.00008C10.6666 7.08849 10.7018 7.17327 10.7643 7.23578C10.8268 7.2983 10.9116 7.33342 11 7.33342C11.0884 7.33342 11.1732 7.2983 11.2357 7.23578C11.2982 7.17327 11.3333 7.08849 11.3333 7.00008C11.3333 6.91168 11.2982 6.82689 11.2357 6.76438C11.1732 6.70187 11.0884 6.66675 11 6.66675ZM1.66665 3.33341C1.57824 3.33341 1.49346 3.36853 1.43095 3.43105C1.36843 3.49356 1.33331 3.57834 1.33331 3.66675C1.33331 3.75515 1.36843 3.83994 1.43095 3.90245C1.49346 3.96496 1.57824 4.00008 1.66665 4.00008C1.75505 4.00008 1.83984 3.96496 1.90235 3.90245C1.96486 3.83994 1.99998 3.75515 1.99998 3.66675C1.99998 3.57834 1.96486 3.49356 1.90235 3.43105C1.83984 3.36853 1.75505 3.33341 1.66665 3.33341ZM7.33331 1.33341C7.1565 1.33341 6.98693 1.40365 6.86191 1.52868C6.73689 1.6537 6.66665 1.82327 6.66665 2.00008C6.66665 2.17689 6.73689 2.34646 6.86191 2.47149C6.98693 2.59651 7.1565 2.66675 7.33331 2.66675C7.51013 2.66675 7.67969 2.59651 7.80472 2.47149C7.92974 2.34646 7.99998 2.17689 7.99998 2.00008C7.99998 1.82327 7.92974 1.6537 7.80472 1.52868C7.67969 1.40365 7.51013 1.33341 7.33331 1.33341Z"
                    fill="black"
                  />
                </svg>

                <p>Create a New Canvas</p>
              </div>
            </div>

            <div className={styles.card} onClick={uploadPaper}>
              <div className={styles.cardIcon}>+</div>
              <div className={styles.cardFooter}>
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 16 16"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M3.80191 13.3334C3.52858 12.4487 3.10858 10.378 4.24924 8.32404C5.49391 6.08404 5.21591 3.85604 4.91591 2.66671H12.1979C12.4712 3.55137 12.8912 5.62204 11.7506 7.67604C10.5059 9.91604 10.7839 12.144 11.0839 13.3334H3.80191ZM3.08391 7.67604C1.65258 10.252 2.23391 12.81 2.55058 13.7967C2.72791 14.354 3.24524 14.6667 3.76658 14.6667H11.4866C12.2166 14.6667 12.6559 13.9434 12.4652 13.3227C12.1906 12.428 11.7806 10.368 12.9159 8.32404C14.3472 5.74804 13.7659 3.19004 13.4492 2.20337C13.2719 1.64604 12.7546 1.33337 12.2332 1.33337H4.51324C3.78324 1.33337 3.34324 2.05671 3.53391 2.67737C3.80858 3.57204 4.21924 5.63204 3.08391 7.67604ZM5.99991 6.00004C5.99991 5.82323 6.07015 5.65366 6.19517 5.52864C6.3202 5.40361 6.48977 5.33337 6.66658 5.33337H10.6666C10.8434 5.33337 11.013 5.40361 11.138 5.52864C11.263 5.65366 11.3332 5.82323 11.3332 6.00004C11.3332 6.17685 11.263 6.34642 11.138 6.47144C11.013 6.59647 10.8434 6.66671 10.6666 6.66671H6.66658C6.48977 6.66671 6.3202 6.59647 6.19517 6.47144C6.07015 6.34642 5.99991 6.17685 5.99991 6.00004ZM5.99991 8.00004C5.8231 8.00004 5.65353 8.07028 5.52851 8.1953C5.40348 8.32033 5.33324 8.4899 5.33324 8.66671C5.33324 8.84352 5.40348 9.01309 5.52851 9.13811C5.65353 9.26314 5.8231 9.33337 5.99991 9.33337H7.99991C8.17672 9.33337 8.34629 9.26314 8.47131 9.13811C8.59634 9.01309 8.66658 8.84352 8.66658 8.66671C8.66658 8.4899 8.59634 8.32033 8.47131 8.1953C8.34629 8.07028 8.17672 8.00004 7.99991 8.00004H5.99991Z"
                    fill="black"
                  />
                </svg>

                <p>Upload a new Paper</p>
              </div>
            </div>

            <div className={styles.card} onClick={deepSearch}>
              <div className={styles.cardIcon}>+</div>
              <div className={styles.cardFooter}>
                <svg
                  width="14"
                  height="15"
                  viewBox="0 0 14 15"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M0.374512 6.62537C0.374512 4.96776 1.03299 3.37805 2.20509 2.20595C3.3772 1.03385 4.96691 0.375366 6.62451 0.375366C8.28212 0.375366 9.87183 1.03385 11.0439 2.20595C12.216 3.37805 12.8745 4.96776 12.8745 6.62537C12.8767 8.05211 12.3885 9.43628 11.4918 10.546L13.3165 12.3707C13.4262 12.4893 13.4857 12.6458 13.4826 12.8074C13.4795 12.9689 13.414 13.123 13.2997 13.2373C13.1855 13.3516 13.0315 13.4172 12.87 13.4205C12.7084 13.4237 12.5519 13.3643 12.4332 13.2547L10.6145 11.436C9.67682 12.2158 8.53069 12.7028 7.31851 12.8367C7.23516 12.8495 7.15009 12.8452 7.06841 12.8243C6.98673 12.8033 6.91013 12.7661 6.84323 12.7148C6.77632 12.6634 6.72048 12.5991 6.67907 12.5256C6.63766 12.4522 6.61154 12.3711 6.60227 12.2873C6.59301 12.2035 6.60079 12.1187 6.62514 12.0379C6.6495 11.9572 6.68994 11.8822 6.74402 11.8175C6.79809 11.7528 6.8647 11.6997 6.93983 11.6615C7.01496 11.6232 7.09705 11.6005 7.18118 11.5947C8.44961 11.4505 9.61487 10.8267 10.4382 9.85106C11.2615 8.87542 11.6805 7.62185 11.6093 6.34723C11.5381 5.07262 10.9822 3.87349 10.0554 2.99557C9.12858 2.11765 7.90111 1.62743 6.62451 1.62537C5.85405 1.6252 5.09398 1.8031 4.40361 2.14516C3.71324 2.48722 3.11127 2.98419 2.64466 3.5973C2.17806 4.2104 1.85946 4.92304 1.71372 5.67959C1.56798 6.43614 1.59906 7.21614 1.80451 7.9587C1.82636 8.0378 1.8324 8.12043 1.82232 8.20186C1.81223 8.2833 1.78619 8.36195 1.74571 8.43333C1.70522 8.50471 1.65107 8.56741 1.58635 8.61786C1.52163 8.66831 1.44761 8.70552 1.36851 8.72737C1.28941 8.74921 1.20679 8.75526 1.12535 8.74517C1.04391 8.73508 0.965258 8.70905 0.89388 8.66856C0.822503 8.62808 0.759799 8.57393 0.709349 8.50921C0.658898 8.44449 0.621689 8.37047 0.599846 8.29137C0.450052 7.74849 0.374256 7.18853 0.374512 6.62537Z"
                    fill="#262626"
                  />
                  <path
                    d="M2.76664 8.42408C2.22264 9.97008 1.89797 10.7848 0.357306 11.4228C0.252639 11.4661 0.249306 11.6181 0.351973 11.6654C1.91197 12.3781 2.32931 13.0021 2.79397 14.4774C2.83131 14.5954 3.00397 14.5974 3.04597 14.4808C3.56264 13.0454 4.34464 12.1988 5.69731 11.6594C5.80664 11.6154 5.81064 11.4501 5.70331 11.4014C5.28531 11.2134 4.54931 10.8368 4.01731 10.3134C3.49731 9.80075 3.18131 8.94808 3.02864 8.43342C2.99264 8.31208 2.80864 8.30408 2.76664 8.42408Z"
                    fill="#262626"
                  />
                </svg>

                <p>Deep Search</p>
              </div>
            </div>
          </div>

          <div className={styles.footer}>
            <hr />
            <div className={styles.datePicker}>
              Today{" "}
              <span className={styles.dateArrow}>
                <svg
                  width="8"
                  height="6"
                  viewBox="0 0 8 6"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M0.28501 1.56498C0.128013 1.40798 0.129141 1.15309 0.287522 0.997493C0.443933 0.843826 0.694965 0.844936 0.85001 0.999982L3.80422 3.95419C3.91235 4.06232 4.08765 4.06232 4.19578 3.95419L7.14999 0.999982C7.30503 0.844937 7.55607 0.843826 7.71248 0.997493C7.87086 1.1531 7.87199 1.40798 7.71499 1.56498L4.22453 5.05544C4.10053 5.17945 3.89947 5.17945 3.77547 5.05544L0.28501 1.56498Z"
                    fill="#1D1C1D"
                  />
                </svg>
              </span>
            </div>
          </div>

          <div className={styles.chat} ref={chatRef}>
            {messages.map((msg, i) => React.cloneElement(msg, { key: i }))}
          </div>

          <div className={styles.inputWrapper}>
            <div className={styles.input_container}>
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M19.9198 12.7959L12.2267 20.4834C11.1715 21.5383 9.74041 22.1308 8.24835 22.1305C6.75629 22.1302 5.32545 21.5373 4.27059 20.482C3.21574 19.4268 2.62327 17.9957 2.62354 16.5037C2.6238 15.0116 3.21677 13.5808 4.272 12.5259L13.4745 3.34875C14.178 2.64559 15.1321 2.25071 16.1267 2.25098C16.6193 2.25111 17.1069 2.34824 17.5619 2.53684C18.0169 2.72544 18.4302 3.0018 18.7784 3.35015C19.1266 3.69851 19.4027 4.11202 19.5911 4.5671C19.7794 5.02217 19.8763 5.50989 19.8762 6.0024C19.876 6.49491 19.7789 6.98258 19.5903 7.43755C19.4017 7.89252 19.1253 8.30589 18.777 8.65406L18.7611 8.66906L9.77981 17.3147C9.67332 17.4171 9.54769 17.4976 9.41011 17.5514C9.27252 17.6053 9.12567 17.6316 8.97794 17.6287C8.8302 17.6258 8.68448 17.5939 8.5491 17.5347C8.41371 17.4755 8.29131 17.3902 8.18887 17.2837C8.08644 17.1773 8.00599 17.0516 7.95211 16.914C7.89823 16.7765 7.87198 16.6296 7.87485 16.4819C7.87772 16.3341 7.90967 16.1884 7.96885 16.053C8.02804 15.9176 8.11332 15.7952 8.21981 15.6928L17.1926 7.05656C17.4731 6.77435 17.63 6.39229 17.6287 5.99442C17.6275 5.59655 17.4683 5.21546 17.1861 4.935C17.0463 4.79613 16.8806 4.68614 16.6984 4.61131C16.5161 4.53648 16.3209 4.49828 16.1239 4.49889C15.7261 4.50012 15.345 4.65935 15.0645 4.94156L5.862 14.1159C5.22908 14.7491 4.87362 15.6078 4.87379 16.503C4.87388 16.9463 4.96128 17.3852 5.13099 17.7947C5.30071 18.2042 5.54943 18.5763 5.86294 18.8897C6.17645 19.2031 6.54861 19.4516 6.95819 19.6212C7.36776 19.7908 7.80672 19.878 8.25001 19.8779C9.14526 19.8777 10.0038 19.5219 10.6367 18.8887L18.3298 11.2012C18.4345 11.0966 18.5587 11.0136 18.6954 10.957C18.8321 10.9003 18.9787 10.8712 19.1267 10.8712C19.2747 10.8712 19.4212 10.9003 19.558 10.957C19.6947 11.0136 19.8189 11.0966 19.9236 11.2012C20.0282 11.3059 20.1112 11.4301 20.1679 11.5669C20.2245 11.7036 20.2536 11.8501 20.2536 11.9981C20.2536 12.1461 20.2245 12.2927 20.1679 12.4294C20.1112 12.5661 20.0282 12.6904 19.9236 12.795L19.9198 12.7959Z"
                  fill="#94A3B8"
                />
              </svg>
              <textarea
                className={styles.input}
                style={{ height: "102px" }}
                type="text"
                placeholder="Message to group..."
                value={inputValue}
                onChange={(e) => setInputValue(e.target.value)}
              />
            </div>
            <button
              className={styles.sendBtn}
              type="button"
              onClick={handleSend}
            >
              Send
              <span>
                <svg
                  width="20"
                  height="20"
                  viewBox="0 0 20 20"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M18.2701 8.63131L5.14038 1.13913C4.86356 0.984056 4.54607 0.916943 4.23017 0.946713C3.91427 0.976483 3.61491 1.10173 3.37193 1.30578C3.12894 1.50984 2.95384 1.78304 2.86992 2.08904C2.78599 2.39505 2.79722 2.71935 2.9021 3.01881L5.25992 10.0001L2.9021 16.9813C2.81921 17.2168 2.79396 17.4688 2.82848 17.7161C2.863 17.9634 2.95627 18.1988 3.10049 18.4026C3.2447 18.6064 3.43567 18.7727 3.65737 18.8875C3.87908 19.0023 4.12508 19.0624 4.37476 19.0626C4.64326 19.062 4.90713 18.9926 5.14117 18.861L5.1482 18.8563L18.2732 11.3508C18.5138 11.2146 18.714 11.017 18.8533 10.7781C18.9926 10.5392 19.066 10.2676 19.066 9.99108C19.066 9.71455 18.9926 9.44297 18.8533 9.20408C18.714 8.96519 18.5138 8.76754 18.2732 8.63131H18.2701ZM4.93648 16.8173L6.92242 10.9376H11.2498C11.4984 10.9376 11.7369 10.8388 11.9127 10.663C12.0885 10.4872 12.1873 10.2487 12.1873 10.0001C12.1873 9.75142 12.0885 9.51297 11.9127 9.33715C11.7369 9.16134 11.4984 9.06256 11.2498 9.06256H6.92242L4.9357 3.18131L16.8701 9.99147L4.93648 16.8173Z"
                    fill="white"
                  />
                </svg>
              </span>
            </button>
          </div>
        </div>
        <ZhilogChat />
      </main>
    </div>
  );
}
